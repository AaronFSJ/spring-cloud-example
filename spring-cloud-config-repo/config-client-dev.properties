profile=dev-1.0
server.port=8888
#server.context-path=/eureka-provider
#数据源配置
spring.datasource.url=jdbc:mysql://localhost:3306/movie?useUnicode=true&characterEncoding=utf-8&autoReconnect=true
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.maxActive=20
spring.datasource.initialSize=1
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
spring.datasource.minIdle=1
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=select '1'
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxOpenPreparedStatements=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true
# 对应实体类的包名
#mybatis配置
mybatis.typeAliasesPackage=com.aaron.entity
# mapper.xml文件所在位置，放到了resources下面
mybatis.mapperLocations=classpath:mybatis/**Mapper.xml
#mybatis.configLocation: classpath:/mybatis-config.xml
spring.resources.static-locations=classpath:/static/

#spring.mvc.view.prefix=/templates/
#spring.mvc.view.suffix=.jsp

#endpoints.health.sensitive=false
#endpoints.beans.enabled=true
#management.security.enabled=false
#endpoints.configprops.enabled=false

#eureka配置
#注册到eureka server上的应用名称
spring.application.name=eureka-provider
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
#是否将自已的ip地址注册到eureka server上，true代表注册
eureka.instance.prefer-ip-address=true
eureka.client.healthcheck.enabled=true			# 开启健康检查（需要spring-boot-starter-actuator依赖）
#以下更改Eureka更新频率将打破服务器的自我保护功能
# 续约更新时间间隔（默认30秒），生产环境下不建议自定义这些配置。
eureka.instance.lease-renewal-interval-in-seconds=30
# 续约到期时间（默认90秒），生产环境下不建议自定义这些配置。
eureka.instance.lease-expiration-duration-in-seconds=10
##以上更改Eureka更新频率将打破服务器的自我保护功能，生产环境下不建议自定义这些配置。
